// RobotBuilder Version: 2.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// C++ from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.


#include "AutoLaunchCommand.h"
#include "LaunchCommand.h"

// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTOR

AutoLaunchCommand::AutoLaunchCommand(bool onoff): Command() {
	m_onoff=onoff;
    // Use requires() here to declare subsystem dependencies
    // eg. requires(chassis);
    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=REQUIRES
    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=REQUIRES
}

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTOR

// Called just before this Command runs the first time
void AutoLaunchCommand::Initialize() {
	//load = new LaunchCommand();
	//Robot::launcher->setLauncherMotor(1);
	//Wait(3);
	//load->Start();
	//Wait(1);
	//Robot::launcher->setLauncherMotor(0);
}

// Called repeatedly when this Command is scheduled to run
void AutoLaunchCommand::Execute() {
	if(m_onoff == true)
	{
		SetTimeout(2);
		Robot::launcher->setLauncherMotor(1);
	}
	else
	{
		Robot::launcher->setLauncherMotor(0);
	}
}

// Make this return true when this Command no longer needs to run execute()
bool AutoLaunchCommand::IsFinished() {
	return IsTimedOut();
}

// Called once after isFinished returns true
void AutoLaunchCommand::End() {

}

// Called when another command which requires one or more of the same
// subsystems is scheduled to run
void AutoLaunchCommand::Interrupted() {

}
